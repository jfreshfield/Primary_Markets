---
slug: salesforce
layout_name: application
---

<script>
    console.log("Top of Salesforce Form");
</script>

{% render_form 'salesforce', resource_type: 'salesforce' %}

{% comment %}
    An example GET URL to return the name of ALL Opportunities, is below:

    https://primarymarkets.my.salesforce.com/services/data/v43.0/query/?q=SELECT+Name+from+Opportunity

    This is how to get the currently logged in User, from any page:

    {% query_graph 'current_user', result_name: 'g' %}

{% endcomment %}

{% comment %}
    Setup the Meta Data and Project Name
{% endcomment %}

{% content_for 'meta_title' %}Salesforce Data{% endcontent_for %}
{% content_for 'meta_desc' %}Salesforce Data page is used to demonstrate accessing of API.{% endcontent_for %}
{% content_for 'project_name' %}Salesforce Data{% endcontent_for %}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="https://www.facebook.com/2008/fbml" amp>
    <body id="body">
        <div id="offering-left-panel">
            <div class="offering-left-group" style = "width:210px;margin-top:-550px; margin-left:-135px; float:left;">
                <div class="offering-title ">Capital Raises</div>
                <ul class="list-reset flex flex-wrap mb3">
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/assets/securities">Securities</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/assets/funds">Funds</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/assets/fixed-income">Fixed Income</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/assets/commercial">Commercial</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/assets/direct-assets">Direct Assets</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/assets/crypto-blockchain">Crypto</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/assets/past-offers">Past Offers</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/list-a-new-asset">List a New Asset</a> </li>
                </ul>
            </div>

            <div class="offering-left-group" style = "width:210px;margin-top:-490px; margin-left:-135px; float:left;">
                <div class="offering-title ">Secondary Trading</div>
                <ul class="list-reset flex flex-wrap mb3">
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/ecosystems">About Ecosystems  </a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/custom/airr">AIRR</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/custom/blackwall-property-funds">BlackWall</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/custom/blooms-the-chemist">Blooms the Chemist</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/custom/haoma-mining">Haoma Mining</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/custom/moneytech">Moneytech</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/custom/planet-innovation">Planet Innovation</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="//www.primarymarkets.com/open-assets-on-offer/pub-group-unlisted-existing-stapled-securities">Pelathon</a> </li>
                    <li class="px1"><a class="text-decoration-none ampstart-label"><a href="/custom/tyro-payments">Tyro</a> </li>
                </ul>
            </div>
        </div> 

        <div id="offering-mid-panel">
            <div id="mainPanel" style=" border:5px solid  #26B05F; padding:20px; margin-top:-550px; margin-left:-70px; margin-right:-135px;float:left;overflow-wrap: break-word;" class="featured">
                <h1>Featured</h1> 
                <p id="assetNamePrompt"><strong style="font-weight:700!important;">
                <span class="h5 block mb3"><strong style="font-weight:700!important;"><a id="assetNameValue" href="https://www.primarymarkets.com/open-assets-on-offer/sale-of-online-lifestyle-magazine"> </strong></a></span>
                <p id="saleTypePrompt"><strong style="font-weight:700!important;"></strong>
            </div> 
        </div>              
    </body>   

    {% comment %}
        At the moment, I am using this page as the default page in the system. When the User clicks the login button from the initial page, they are automatically
        re-directed here. Given that we are using Salesforce for User/Member verification, we must perform the required Salesforce calls server-side with Liquid, not with
        Javascript, as we cannot expose our credentials to the public. Thus, as the initial Login page is rendered with Liquid upon load, we need to perform the
        validation on a separate page after the User has entered their Login/Password and clicked on the Login button, which submits the initial form. For the time being,
        as this is the default page, we will perform the Member verification through Salesforce below.

        The code below can be used to obtain the e-mail entered by the User on the initial login form:

        {% query_graph 'current_user', result_name: 'current_user_details' %}
        E-Mail: {{ current_user_details.current_user.email }}

        Alternatively, as I have stored the Username and Password entered by the User in Javascript Session variables, we can obtain those values using the code below:

        <script>
            var email = localStorage.getItem("email");
            var password = localStorage.getItem("password");
        </script>
    {% endcomment %}

    <script>
        console.log("Fake script ready for Salesforce Member validation, after we have made the necessary Liquid calls out to Salesforce");
    </script>

    <script>
        console.log("Fake script 2");
    </script>

    {% execute_query 'authorize_to_salesforce', result_name: 'authorize_response' %}
    {% if authorize_response.api_call_send.response.body %}
        {% assign response = authorize_response.api_call_send.response.body | to_hash %}
    {% endif %}

    {% execute_query 'log', message: response %}

    {% if response.access_token == blank %}
        {% execute_query 'log', type: 'error', message: 'Authorization to salesforce failed!' %}
    {% else %}
        {% capture contact_data_string %}
        {
                "salesforce_request": "https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/query/?q=SELECT+Email,Set_Initial_Password__c+from+Contact+WHERE+Email!=null",
                "access_token": "{{ response.access_token }}"
        }
        {% endcapture %}

        {% assign contactData = contact_data_string | to_hash %}
        {% execute_query 'log', message: response %}
        {% execute_query 'log', message: contactData %}
        {% execute_query 'send_to_salesforce', data: contactData, result_name: 'api_response_contact' %}

        {% if api_response_contact.api_call_send.response.body %}
            {% assign response_data_contact = api_response_contact.api_call_send.response.body | to_hash %}
        {% endif %}  

        {% execute_query 'log', message: response_data_contact.records %}

        {% capture data_string %}
        {
                "salesforce_request": "https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Asset/",
                "access_token": "{{ response.access_token }}",
                "instance_url": "{{ response.instance_url }}"
        }
        {% endcapture %}

        {% assign data = data_string | to_hash %}
        {% execute_query 'log', message: response %}
        {% execute_query 'log', message: data %}
        {% execute_query 'send_to_salesforce', data: data, result_name: 'api_response' %}

        {% if api_response.api_call_send.response.body %}
            {% assign response_data = api_response.api_call_send.response.body | to_hash %}
        {% endif %}  

        {% execute_query 'log', message: response_data.recentItems %}

        {% if response_data.recentItems == blank %}
            {% execute_query 'log', type: 'error', message: 'Request to salesforce failed!' %}
        {% else %}
            {% assign size = response_data.recentItems | size %}
            {% execute_query 'log', message: size %}

            {% for itemsReturned in response_data.recentItems %}
                {% execute_query 'log', message: itemsReturned.Id %}
                {% execute_query 'log', message: itemsReturned.Name %}

                {% if forloop.first == true %}                
                    {% assign query_string =  itemsReturned.Id | append: "'" %}
                {% else %}
                    {% assign itemString = ",'" | append: itemsReturned.Id | append: "'" %}
                    {% assign query_string = query_string | append: itemString %}
                {% endif %} 

                {% if forloop.last == true %}
                    {% assign query_string = query_string | append: ")+ORDER+BY+Start_Date__c+Desc" %}
                {% endif %}             
            {% endfor %}

            {% capture data_string %}
            {
                "salesforce_request": "https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/query/?q=SELECT+Id,Name,Asset_Public_Name__c,Category__c,Sale_Type__c,Price_Guide__c,Status,Summary__c,Executive_Summary__c,Start_Date__c+from+Asset+WHERE+Id+IN('{{ query_string}}",
                "access_token": "{{ response.access_token }}"
            }
            {% endcapture %}

            {% assign data = data_string | to_hash %}
            
            {% execute_query 'send_to_salesforce', data: data, result_name: 'api_response_asset' %}

            {% if api_response_asset.api_call_send.response.body %}
                {% assign response_data = api_response_asset.api_call_send.response.body | to_hash %}
            {% endif %}  

            {% execute_query 'log', message: response_data.records %}

            {% if response_data.records == blank %}
                {% execute_query 'log', type: 'error', message: 'Request to salesforce failed!' %}
            {% else %}
                {% for itemsReturned in response_data.records %}
                    {% if itemsReturned.Asset_Public_Name__c == blank %}
                        {% assign titleDisplay = itemsReturned.Name %}
                    {% else %}    
                        {% assign titleDisplay = itemsReturned.Asset_Public_Name__c %}
                    {% endif %} 

                    {% assign originalSummarySize = itemsReturned.Executive_Summary__c | size %}   
                    {% assign summaryTextTemp = itemsReturned.Executive_Summary__c | split: '</span' %}
                    {% assign summaryText = summaryTextTemp[0] %}
                    {% assign newSummarySize = summaryText | size %}

                    {% if newSummarySize == originalSummarySize %}
                        {% assign summaryTextTemp = itemsReturned.Executive_Summary__c | split: '<br />' %}
                        {% assign summaryText = summaryTextTemp[0] %}
                        {% assign newSummarySize = summaryText | size %}
                    {% endif %}

                    {% if newSummarySize == originalSummarySize %}
                        {% assign summaryTextTemp = itemsReturned.Executive_Summary__c | split: '<br>' %}
                        {% assign summaryText = summaryTextTemp[0] %}                        
                        {% assign newSummarySize = summaryText | size %}
                    {% endif %}

                    {% if newSummarySize == originalSummarySize %}
                        {% assign summaryTextTemp = itemsReturned.Executive_Summary__c | split: '</br>' %}
                        {% assign summaryText = summaryTextTemp[0] %}
                        {% assign newSummarySize = summaryText | size %}
                    {% endif %}  

                    {% if newSummarySize == originalSummarySize %}
                        {% assign summaryTextTemp = itemsReturned.Executive_Summary__c | split: '</p>' %}
                        {% assign summaryText = summaryTextTemp[0]  %}
                        {% assign newSummarySize = summaryText | size %}
                    {% endif %}

                    {% assign summaryText = summaryText | strip_html | append: "......"  %}
                    {%comment%}{% execute_query 'log', message: summaryText %}{%endcomment%}

                    <script>                       
                        console.log("Top of SalesforceDetails()" + localStorage.getItem("email") + '/' + localStorage.getItem("password"));
                        var displayData = document.getElementById('assetNamePrompt');
                        var fullHTML = '';
                        var title = "";
                        var endOfSummaryChar = 0;
                        var summaryText = "";
                        var dataURL =  "https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Asset/" + '{{ itemsReturned.Id }}';
                        var itemID = '{{ itemsReturned.Id }}';
                        var moreDetailURL = "";

                        var regex = "services/data/v43.0/sobjects/Asset/";
                        var assetURL = dataURL.replace(regex, '');
                        assetURL = assetURL.substr(0,assetURL.length-3);
                        console.log("Asset URL: " + assetURL);    

                        /*console.log("Item ID: " + itemID);
                        switch (itemID) {
                            case '02i7F000000IOR7QAO':
                                moreDetailURL = 
                                console.log("*** Found New ID ***")
                                break;
                            case '02i7F000000DUY4QAO':

                                break;   
                        } */        
                                          

                        /*fullHTML += '<p id="assetNamePrompt"><strong style="font-weight:700!important;">Asset Name:</strong>';

                        //fullHTML += '<a name="GetMoreDetail" href=' + moreDetailURL + ' style="color: rgb(255, 255, 255) display:block;"><span class="cat_button m-hide" style="float: right; margin-left:15px; margin-bottom:15px; ">Get more detail</a>'   
                        //fullHTML += '<a name="ViewSFDetails" href=' + assetURL + ' style="color: rgb(255, 255, 255) display:block;"><span class="cat_button m-hide" style="float: right; margin-top: 60px; margin-right:-174px; margin-bottom:15px; ">View S/F details&nbsp;</a>'                       
                        fullHTML += '<a name="ViewSFDetails" href=' + assetURL + ' style="color: rgb(255, 255, 255) display:block;"><span class="cat_button m-hide" style="float: right; margin-left:15px; margin-bottom:15px; ">View S/F details</a>'
                        fullHTML += '<span class="logout7588539"><strong style="color:#3697d3;font-weight:700!important;width:420px;position:float-top;overflow-wrap:break-word;"><a id="assetNameValue" href="https://www.primarymarkets.com/open-assets-on-offer/sale-of-online-lifestyle-magazine">' + ' {{ titleDisplay }}' + '</strong></a><br>';            
                        fullHTML += '<strong style="font-weight:700!important;">Categories: </strong>' + ' {{ itemsReturned.Category__c }}' + '<br>';
                        fullHTML += '<strong style="font-weight:700!important;">Sale Type: </strong>' + ' {{ itemsReturned.Sale_Type__c }}' + '<br>';
                        fullHTML += '<strong style="font-weight:700!important;">Price Guide: </strong>' + ' {{ itemsReturned.Price_Guide__c }}' + '<br>';
                        fullHTML += '<strong style="font-weight:700!important;">Status: </strong>' + ' {{ itemsReturned.Status }}' + '<br><br>';
                        fullHTML += '<strong style="font-weight:700!important;">Summary: </strong>' + ' {{ summaryText }}' + '</span></p>';
                        fullHTML += '<div id="separator" class="asset-item" style="border-bottom:1px dotted #666666; margin-bottom:15px;">'; 
                        displayData.insertAdjacentHTML('beforeend',fullHTML); */                                                 
                    </script>                        
                {% endfor %}
            {% endif %}   
        {% endif %}     
    {% endif %}

    {% comment %}
    <script async src="https://primarymarkets--partial.cs57.my.salesforce.com/soap/ajax/43.0/connection.js" type="text/javascript"></script>
    <script>
        function SalesforceAPIMain() {
            console.log("Top of SalesforceAPIMain() 2");

            /* var xhr = new XMLHttpRequest(),
                method = "POST",
                //url = "https://login.salesforce.com/services/oauth2/token?grant_type=password&client_id=YjkyMzJmNDUzMGNmOTYzODVlNDQ0ZjE2OTUxOTU1NDI5MGViN2I3NWU3YTFjNmY300D0k000000DZZO&client_secret=8983295620726487553&username=bb1@primarymarkets.com&password=w2LGDQDP5n1l";
                url = "https://login.salesforce.com/services/oauth2/token?grant_type=refresh_token&client_id=YjkyMzJmNDUzMGNmOTYzODVlNDQ0ZjE2OTUxOTU1NDI5MGViN2I3NWU3YTFjNmY300D0k000000DZZO&client_secret=8983295620726487553&refresh_token=5Aep8613hy0tHCYdhyaehuFN1TZN4yizRRFvRyVnH06Aur5BXeTxv4vAbUBAGum4mz7ffkq5IWsUIfKt.a0EoK1";

            xhr.open(method, url, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function () {
                if(xhr.readyState === 4 && xhr.status === 200) {
                    var responseTextJSON = JSON.parse(xhr.responseText);
                    console.log(responseTextJSON);
                }
            };
            xhr.send();
            
            /* $.ajax({
                type: 'POST',
                url : 'https://login.salesforce.com/services/oauth2/token?grant_type=refresh_token&client_id=YjkyMzJmNDUzMGNmOTYzODVlNDQ0ZjE2OTUxOTU1NDI5MGViN2I3NWU3YTFjNmY300D0k000000DZZO&client_secret=8983295620726487553&refresh_token=5Aep8613hy0tHCYdhyaehuFN1TZN4yizRRFvRyVnH06Aur5BXeTxv4vAbUBAGum4mz7ffkq5IWsUIfKt.a0EoK1',
                // Add the Authorization Header including the Access Token
                headers : {                   
                    'Content-Type' : 'application/json'
                },
                success : function(response){
                    alert(response);
                },
                error: function(response){
                    alert(response);
                }
            }); */         

            /*var xhr = new XMLHttpRequest(),
                method = "POST";
                //url = "https://test.salesforce.com/services/oauth2/token?grant_type=password&client_id=3MVG959Nd8JMmavR6vEQ86NsiBZ32HtkPov.eONCicrR.9KfhVhfHGVLaQCVkyooaIo0DAartnBmmOgAXk5Rw&client_secret=8688398464689451929&username=apibot@primarymarkets.com.partial&password=Primary@3";

                  url =  "https://login.salesforce.com/services/oauth2/token?grant_type=password&client_id=YjkyMzJmNDUzMGNmOTYzODVlNDQ0ZjE2OTUxOTU1NDI5MGViN2I3NWU3YTFjNmY300D0k000000DZZO&client_secret=8983295620726487553&username=bb1@primarymarkets.com&password=w2LGDQDP5n1l";
            
            xhr.open(method, url, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function () {
                if(xhr.readyState === 4 && xhr.status === 200) {
                    var responseTextJSON = JSON.parse(xhr.responseText);
                    console.log(responseTextJSON);
                }
            };
            xhr.send(); */

            // Login with Basic Auth

            /*var httpProtocol = new XMLHttpRequest();
            var request = new XMLHttpRequest();

            var xhs = new XMLHttpRequest(),
                method = "GET",
                url = 'https://primarymarkets.my.salesforce.com/services/data/v43.0/sobjects/Asset';

            var authHeader = '';     
            var username = 'bb1@primarymarkets.com';
            var password = 'w2LGDQDP5n1l';
            var encodedString = btoa(username + ':' + password);  
            authHeader = 'Basic: ' +  encodedString;      
            console.log('Using Basic Authentication Header: ' + authHeader);     

            xhs.open(method, url, true);
            xhs.setRequestHeader('Authorization',  authHeader);
            xhs.onreadystatechange = function () {
                if(xhs.readyState === 4 && xhs.status === 200) {
                    var responseTextJSON = JSON.parse(xhs.responseText);
                    console.log("New Login: " + responseTextJSON);         
                }
            }    
            xhs.send();

            $.ajax({
                type: 'POST',
                url: "salesforce",
                data: "abc",
                  success : function(response){
                    //alert(response);
                },
                error: function(response){
                    alert(response);
                }
            }); */

            var dataURL = "";
            var mainLookupComplete = false;
                xhr = new XMLHttpRequest(),
                method = "GET",
                url = "https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Asset";

            xhr.open(method, url, true);
            xhr.setRequestHeader("Authorization", "Bearer 00D0k000000DZZO!AQcAQAAj3X5cFj7MUyYNCSJUDfHm9BFmdYe1.0imN9.DLmtoB2Ngv0r7EgKEPIPSdTzn.SDgwa28cQrazWz2qc2oSO.C6asu");
            xhr.onreadystatechange = function () {
                if(xhr.readyState === 4 && xhr.status === 200) {
                    var responseTextJSON = JSON.parse(xhr.responseText);
                    var records = responseTextJSON.recentItems.length; 
                    console.log(records);
                    for (i = 0; i < records; i++) { 
                        console.log(responseTextJSON.recentItems[i].Name);
                        console.log(responseTextJSON.recentItems[i].attributes.url);
                        console.log(dataURL); 
                        dataURL = "https://primarymarkets--partial.cs57.my.salesforce.com" + responseTextJSON.recentItems[i].attributes.url;
                        SalesforceAPIDetails(dataURL,i);                   
                    }   
                }
            };
            xhr.send();
            WriteToSalesForce();
        }

        function SalesforceAPIDetails(dataURL, recsProcessed) {
            console.log("Top of SalesforceAPIDetails(): " + dataURL + "Recs: " + recsProcessed);
            var xhr = new XMLHttpRequest(),
                method = "GET",
                url = dataURL;

            xhr.open(method, url, true);
            xhr.setRequestHeader("Authorization", "Bearer 00D0k000000DZZO!AQcAQAAj3X5cFj7MUyYNCSJUDfHm9BFmdYe1.0imN9.DLmtoB2Ngv0r7EgKEPIPSdTzn.SDgwa28cQrazWz2qc2oSO.C6asu");
            xhr.onreadystatechange = function () {
                if(xhr.readyState === 4 && xhr.status === 200) {
                    var responseTextJSON = JSON.parse(xhr.responseText);
                    console.log("Detail Name: " + responseTextJSON.Name);
                    //console.log("Asset ID (EOI): " + responseTextJSON.EOI_Asset__c);
                    //console.log("Asset ID (Listing): " + responseTextJSON.Asset_Listing__c);

                    /*if (responseTextJSON.EOI_Asset__c !== null && responseTextJSON.EOI_Asset__c !== 'null'  && responseTextJSON.EOI_Asset__c !== 'undefined') {
                        console.log("EOI Asset: " + responseTextJSON.EOI_Asset__c);
                        SalesforceAPIDetails_2("https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Asset/" + responseTextJSON.EOI_Asset__c, recsProcessed);
                    }
                    else if (responseTextJSON.AssetListing__c !== null && responseTextJSON.AssetListing__c !== 'null' && responseTextJSON.AssetListing__c !== 'undefined') {
                        console.log("Asset Listing: " + responseTextJSON.AssetListing__c);              
                        SalesforceAPIDetails_2("https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Asset/" + responseTextJSON.AssetListing__c, recsProcessed);
                    } */

                    //console.log("Asset Listing: " + responseTextJSON.AccountId);
                    //SalesforceAPIDetails_2("https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Asset/" + responseTextJSON.AccountId, recsProcessed);

                    var dataURL =  "https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Asset/" + responseTextJSON.Id;           
                    var regex = "services/data/v43.0/sobjects/Asset/";
                    var assetURL = dataURL.replace(regex, '');
                    assetURL = assetURL.substr(0,assetURL.length-3);
                    console.log("Asset URL: " + assetURL);

                    var displayData = document.getElementById('assetNamePrompt');
                    //var fullHTML = '<strong style="font-weight:700!important;"> ';
                    var fullHTML = '';
                    var title = "";
                    var endOfSummaryChar = 0;
                    var summaryText = "";
                
                    console.log(responseTextJSON.Asset_Public_Name__c);
                    console.log(responseTextJSON.Name);

                    if (responseTextJSON.Asset_Public_Name__c != null) {
                        title = responseTextJSON.Asset_Public_Name__c;
                    }
                    else {
                        title = responseTextJSON.Name;
                    }

                    fullHTML += '<p id="assetNamePrompt"><strong style="font-weight:700!important;">Asset Name:</strong> ';

                    endOfSummaryChar = responseTextJSON.Summary__c.indexOf('</span');
                    endOfSummaryChar -= 1;

                    if (endOfSummaryChar <= 0) {
                        endOfSummaryChar = responseTextJSON.Summary__c.indexOf('<br>');
                        endOfSummaryChar -= 1;
                    }

                    if (endOfSummaryChar <= 0) {
                        endOfSummaryChar = responseTextJSON.Summary__c.indexOf('</p>');
                        endOfSummaryChar -= 1;
                    }                    

                    if (endOfSummaryChar <= 0) {
                        endOfSummaryChar = responseTextJSON.Summary__c.length;
                    }

                    summaryText = responseTextJSON.Summary__c.substr(0, endOfSummaryChar) + "......";
                    summaryText = summaryText.replace(/<(?:.|\n)*?>/gm, '');
  
                    fullHTML += '<a name="GetMoreDetail" href=' + assetURL + ' style="color: rgb(255, 255, 255) display:block;"><span class="cat_button m-hide" style="float: right; margin-left:15px; margin-bottom:15px; ">Get more detail</a>';
                    fullHTML += '<span class="logout7588539"><strong style="color:#3697d3;font-weight:700!important;width:420px;position:float-top;overflow-wrap:break-word;"><a id="assetNameValue" href="https://www.primarymarkets.com/open-assets-on-offer/sale-of-online-lifestyle-magazine">' + title.trim() + '</strong></a><br>';            
                    fullHTML += '<strong style="font-weight:700!important;">Categories: </strong>' + responseTextJSON.Category__c + '<br>';
                    fullHTML += '<strong style="font-weight:700!important;">Sale Type: </strong>' + responseTextJSON.Sale_Type__c + '<br>';
                    fullHTML += '<strong style="font-weight:700!important;">Price Guide: </strong>' + responseTextJSON.Price_Guide__c + '<br>';
                    fullHTML += '<strong style="font-weight:700!important;">Status: </strong>' + responseTextJSON.Status + '<br><br>';
                    fullHTML += '<strong style="font-weight:700!important;">Summary: </strong>' + summaryText + '</span></p>';
                    fullHTML += '<div id="separator" class="asset-item" style="border-bottom:1px dotted #666666; margin-bottom:15px;">';
                    displayData.insertAdjacentHTML('beforeend',fullHTML); 

                    //WriteToSalesForce();                                                           
                }    
            };
            xhr.send();   
        }   

        function SalesforceAPIDetails_2(dataURL, recsProcessed) {
            console.log("Top of SalesforceAPIDetails_2(): " + dataURL);

            var regex = "services/data/v43.0/sobjects/Asset/";
            var assetURL = dataURL.replace(regex, '');
            assetURL = assetURL.substr(0,assetURL.length-3);
            console.log("Asset URL: " + assetURL);

            //var assetURL = dataURL.substr(0,dataURL.length-3);
            //console.log("Asset URL: " + assetURL);
            var xhr = new XMLHttpRequest(),
                method = "GET",
                url = dataURL;

            xhr.open(method, url, true);
            xhr.setRequestHeader("Authorization", "Bearer 00D0k000000DZZO!AQcAQAAj3X5cFj7MUyYNCSJUDfHm9BFmdYe1.0imN9.DLmtoB2Ngv0r7EgKEPIPSdTzn.SDgwa28cQrazWz2qc2oSO.C6asu");
            xhr.onreadystatechange = function () {
                if(xhr.readyState === 4 && xhr.status === 200) {
                    var responseTextJSON = JSON.parse(xhr.responseText);
                    var displayData = document.getElementById('assetNamePrompt');
                    //var fullHTML = '<strong style="font-weight:700!important;"> ';
                    var fullHTML = '';
                    var title = "";
                    var endOfSummaryChar = 0;
                    var summaryText = "";
                   
                    console.log(responseTextJSON.Asset_Public_Name__c);
                    console.log(responseTextJSON.Name);

                    if (responseTextJSON.Asset_Public_Name__c != null) {
                        title = responseTextJSON.Asset_Public_Name__c;
                    }
                    else {
                        title = responseTextJSON.Name;
                    }

                    fullHTML += '<p id="assetNamePrompt"><strong style="font-weight:700!important;">Asset Name:</strong> ';

                    endOfSummaryChar = responseTextJSON.Executive_Summary__c.indexOf('</span');
                    endOfSummaryChar -= 1;
                    summaryText = responseTextJSON.Executive_Summary__c.substr(0, endOfSummaryChar) + "......";
                    summaryText = summaryText.replace(/<(?:.|\n)*?>/gm, '');

                    fullHTML += '<a name="GetMoreDetail" href=' + assetURL + ' style="color: rgb(255, 255, 255) display:block;"><span class="cat_button m-hide" style="float: right; margin-left:15px; margin-bottom:15px; ">Get more detail </a>';                    
                    fullHTML += '<span class="logout7588539"><strong style="color:#3697d3;font-weight:700!important;width:420px;position:float-top;overflow-wrap:break-word;"><a id="assetNameValue" href="https://www.primarymarkets.com/open-assets-on-offer/sale-of-online-lifestyle-magazine">' + title.trim() + '</strong></a><br>';            
                    fullHTML += '<strong style="font-weight:700!important;">Categories: </strong>' + responseTextJSON.Category__c.trim() + '<br>';
                    fullHTML += '<strong style="font-weight:700!important;">Sale Type: </strong>' + responseTextJSON.Sale_Type__c.trim() + '<br>';
                    fullHTML += '<strong style="font-weight:700!important;">Price Guide: </strong>' + responseTextJSON.Price_Guide__c.trim() + '<br>';
                    fullHTML += '<strong style="font-weight:700!important;">Status: </strong>' + responseTextJSON.Status.trim() + '<br><br>';
                    fullHTML += '<strong style="font-weight:700!important;">Summary: </strong>' + summaryText.trim() + '</span></p>';
                    fullHTML += '<div id="separator" class="asset-item" style="border-bottom:1px dotted #666666; margin-bottom:15px;">';
                    displayData.insertAdjacentHTML('beforeend',fullHTML); 

                    //WriteToSalesForce();
                }
            };
            xhr.send();   
        } 

        function SalesforceDetailsDisplay() {
            console.log("Top of SalesforceDetailsDisplay()");

            var displayData = document.getElementById('assetNamePrompt');
            //var fullHTML = '<strong style="font-weight:700!important;"> ';
            var fullHTML = '';
            var title = "";
            var endOfSummaryChar = 0;
            var summaryText = "";
            
            console.log(responseTextJSON.Asset_Public_Name__c);
            console.log(responseTextJSON.Name);

            if (responseTextJSON.Asset_Public_Name__c != null) {
                title = responseTextJSON.Asset_Public_Name__c;
            }
            else {
                title = responseTextJSON.Name;
            }

            fullHTML += '<p id="assetNamePrompt"><strong style="font-weight:700!important;">Asset Name:</strong> ';

            endOfSummaryChar = responseTextJSON.Executive_Summary__c.indexOf('</span');
            endOfSummaryChar -= 1;
            summaryText = responseTextJSON.Executive_Summary__c.substr(0, endOfSummaryChar) + "......";
            summaryText = summaryText.replace(/<(?:.|\n)*?>/gm, '');

            //fullHTML += '<a name="GetMoreDetail" href=' + assetURL + ' style="color: rgb(255, 255, 255) display:block;"><span class="cat_button m-hide" style="float: right; margin-left:15px; margin-bottom:15px; ">Get more detail </a>';
            fullHTML += '<a name="GetMoreDetail" href=' + assetURL + ' style="color: rgb(255, 255, 255) display:block;"><span class="cat_button m-hide" style="position:fixed; top:50%; left:50%;transform:translate(-50%, -50%)) ">Get more detail 2 </a>';
            fullHTML += '<span class="logout7588539"><strong style="color:#3697d3;font-weight:700!important;width:420px;position:float-top;overflow-wrap:break-word;"><a id="assetNameValue" href="https://www.primarymarkets.com/open-assets-on-offer/sale-of-online-lifestyle-magazine">' + title.trim() + '</strong></a><br>';            
            fullHTML += '<strong style="font-weight:700!important;">Categories: </strong>' + responseTextJSON.Category__c.trim() + '<br>';
            fullHTML += '<strong style="font-weight:700!important;">Sale Type: </strong>' + responseTextJSON.Sale_Type__c.trim() + '<br>';
            fullHTML += '<strong style="font-weight:700!important;">Price Guide: </strong>' + responseTextJSON.Price_Guide__c.trim() + '<br>';
            fullHTML += '<strong style="font-weight:700!important;">Status: </strong>' + responseTextJSON.Status.trim() + '<br><br>';
            fullHTML += '<strong style="font-weight:700!important;">Summary: </strong>' + summaryText.trim() + '</span></p>';
            fullHTML += '<div id="separator" class="asset-item" style="border-bottom:1px dotted #666666; margin-bottom:15px;">';
            displayData.insertAdjacentHTML('beforeend',fullHTML); 

            //WriteToSalesForce();                
        }         

        function WriteToSalesForce() {
            console.log("Top of WriteToSalesForce(): ");
         
            // Set the URL as follows, to create a NEW Opportunity record
            //var requestUrl = "https://primarymarkets.my.salesforce.com/services/data/v43.0/sobjects/Opportunity";

            // Setting the Opportunity ID in the URL as per below, allows the record to be modified
            var requestUrl = "https://primarymarkets--partial.cs57.my.salesforce.com/services/data/v43.0/sobjects/Opportunity/0067F00000AMMvRQAX";

            // Create a JavaScript object with the Opportunity field values
            var opportunityInfo = {
                "Name" : "JuzzyTest",
                "CloseDate": "2018-08-30",
                "StageName": "New",
                "Probability": "10",
                "Amount": "1999"
            }

            // Convert the object to a JSON string
            var opportunityInfoJson = JSON.stringify(opportunityInfo);

            // Send POST/PATCH with AJAX - POST is used to CREATE records, and PATCH is used to MODIFY records
            $.ajax({
                type: 'PATCH',
                url : requestUrl,
                // Add the Authorization Header including the Access Token
                headers : {
                    'Authorization' : 'Bearer 00D0k000000DZZO!AQcAQAAj3X5cFj7MUyYNCSJUDfHm9BFmdYe1.0imN9.DLmtoB2Ngv0r7EgKEPIPSdTzn.SDgwa28cQrazWz2qc2oSO.C6asu',
                    'Content-Type' : 'application/json'
                },
                data : opportunityInfoJson,
                success : function(response){
                    //alert(response);
                },
                error: function(response){
                    //alert(response);
                }
            });          
        }   
  
    </script> 
    {% endcomment %}
</html>